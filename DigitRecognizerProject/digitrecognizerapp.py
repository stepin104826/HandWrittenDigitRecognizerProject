# -*- coding: utf-8 -*-
"""DigitRecognizerApp.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/104ZJgWhus7d-C1oY3ej5VOe_jHAu_3rk
"""

!pip install gradio

import tensorflow as tf
from tensorflow import keras
import gradio as gd
import numpy as np
import cv2

digitrec = keras.models.load_model("bestmodel.h5")

def predict_func(img):
  img_array = keras.utils.img_to_array(img)
  img_array1 = tf.reshape(img_array,[28,28])
  reshaped_img_array = tf.reshape(img_array1,[28,28,1])
  resized_img_array = keras.preprocessing.image.smart_resize(reshaped_img_array,(60,60))
  final_img = tf.reshape(resized_img_array,[1,60,60,1])
  final_img = final_img/255.0

  Y_pred = digitrec.predict(final_img)
  Y_pred = tf.reshape(Y_pred,[-1])

  predictions = []
  for ele in Y_pred:
      predictions.append(ele.numpy())
  digits = {}
  op_l = []
  for i,ele in enumerate(predictions):
      op_l.append((str(i),ele))
  sorted_list = sorted(op_l, key = lambda ele:ele[1])
  for k,v in sorted_list:
      digits[k] = float(v)
  # print(digits)
  return digits



  # return str(np.argmax(predictions)
iface = gd.Interface(fn = predict_func, inputs = "sketchpad", outputs = gd.components.Label(num_top_classes = 6),
                     live= True, title = "Dynamic Digit Recognizer")
iface.launch(debug = False,share = True)